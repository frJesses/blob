(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{434:function(t,o,_){"use strict";_.r(o);var s=_(2),p=Object(s.a)({},(function(){var t=this,o=t._self._c;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("div",{staticClass:"custom-block danger"},[o("p",{staticClass:"title"}),o("p",[t._v("原型(prototype): 一个简单的对象，用于实现对象的 属性继承。可以简单的理解成对象的爹。在 Firefox 和 Chrome 中，每个 JavaScript 对象中都包含一个__proto__(非标准)的属性指向它爹(该对象的原型)，可 obj.__proto__进行访问。")])]),o("div",{staticClass:"custom-block danger"},[o("p",{staticClass:"title"}),o("p",[t._v("原型链：当我们访问一个对象的属性时，如果这个对象内部不存在这个属性，那么它就会去它的原型对象里找这个属性，这个原型对象又会有自己的原型，于是就这样一直找下去，也就是原型链的概念.原型链的尽头一般来说都是 Object.prototype 所以这就是我们新建的对象为什么能够使用 toString() 等方法的原因。")])]),o("div",{staticClass:"custom-block danger"},[o("p",{staticClass:"title"}),o("p",[t._v("构造函数: 可以通过 new 来 新建一个对象 的函数。")])]),o("div",{staticClass:"custom-block danger"},[o("p",{staticClass:"title"}),o("p",[t._v("实例: 通过构造函数和 new 创建出来的对象，便是实例。 实例通过__proto__指向原型，通过 constructor 指向构造函数。")])]),o("img",{attrs:{src:t.$withBase("/images/JS/原型链.png"),alt:"VuePress Logo"}}),t._v(" "),o("p",[o("strong",[t._v("原型链")])]),t._v(" "),o("div",{staticClass:"custom-block danger"},[o("p",{staticClass:"title"}),o("p",[t._v("原型链是由原型对象组成，每个对象都有__proto__ 属性，指向了创建该对象的构造函数的原型，__proto__ 将对象连接起来组成了原型链。是一个用来实现继承和共享属性的有限的对象链")])]),o("ul",[o("li",[t._v("属性查找机制: 当查找对象的属性时，如果实例对象自身不存在该属性，则沿着原型链往上一级查找，找到时则输出，不存在时，则继续沿着原型链往上一级查找，直至最顶级的原型对象 Object.prototype，如还是没找到，则输出 undefined；")]),t._v(" "),o("li",[t._v("属性修改机制: 只会修改实例对象本身的属性，如果不存在，则进行添加该属性，如果需要修改原型的属性时，则可以用: b.prototype.x = 2；但是这样会造成所有继承于该对象的实例的属性发生改变。")])]),t._v(" "),o("p",[o("strong",[t._v("js 获取原型的方法")])]),t._v(" "),o("ul",[o("li",[t._v("p.__proto__")]),t._v(" "),o("li",[t._v("p.constructor.prototype")]),t._v(" "),o("li",[t._v("Object.getPrototypeOf(p)")])]),t._v(" "),o("p",[o("strong",[t._v("总结")])]),t._v(" "),o("ul",[o("li",[t._v("每个函数都有 prototype 属性")]),t._v(" "),o("li",[t._v("每个对象都有 __proto__ 属性，指向了创建该对象的构造函数的原型。其实这个属性指向了 [[prototype]]，但是 [[prototype]]是内部属性，我们并不能访问到，所以使用 __proto__来访问。")]),t._v(" "),o("li",[t._v("对象可以通过 __proto__ 来寻找不属于该对象的属性，__proto__ 将对象连接起来组成了原型链。")])])])}),[],!1,null,null,null);o.default=p.exports}}]);