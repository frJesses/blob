(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{419:function(t,e,i){"use strict";i.r(e);var l=i(2),a=Object(l.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[e("strong",[t._v("1. CSS 中的重绘与重排是什么")])]),t._v(" "),e("div",{staticClass:"custom-block danger"},[e("p",{staticClass:"title"}),e("p",[t._v("重绘:当元素的一部分属性发生改变，如外观、背景、颜色等不会引起布局变化，只需要浏览器根据元素的新属性重新绘制\n，使元素呈现新的外观叫做重绘。")]),t._v(" "),e("p",[t._v("重排（回流）:当 render 树中的一部分或者全部因为大小边距等问题发生改变而需要 DOM 树重新计算的过程")])]),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"title"}),e("p",[e("strong",[t._v("注意：")]),t._v("重绘不一定会引起回流，回流必定会引起重绘")])]),e("p",[e("strong",[t._v("2、引起重绘 Repaint 和重排（回流 reflow ）的属性 ")])]),t._v(" "),e("p",[e("strong",[t._v("2.1 引起重绘 Repaint 的属性")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("常见的重绘元素")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}}),t._v(" "),e("th",{staticStyle:{"text-align":"right"}}),t._v(" "),e("th",{staticStyle:{"text-align":"right"}})])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("color")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("border-style")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("visibility")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("background")])]),t._v(" "),e("tr",[e("td",[t._v("text-decoration")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("background-image")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("background-position")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("background-repeat")])]),t._v(" "),e("tr",[e("td",[t._v("outline-color")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("outline")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("outline-style")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("border-radius")])]),t._v(" "),e("tr",[e("td",[t._v("outline-width")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("box-shadow")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("background-size")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}})])])]),t._v(" "),e("p",[e("strong",[t._v("2.2 引起重排 reflow 的属性")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("常见的重绘元素")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}}),t._v(" "),e("th",{staticStyle:{"text-align":"right"}}),t._v(" "),e("th",{staticStyle:{"text-align":"right"}})])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("width")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("height")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("padding")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("margin")])]),t._v(" "),e("tr",[e("td",[t._v("display")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("border-width")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("border")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("top")])]),t._v(" "),e("tr",[e("td",[t._v("position")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("font-size")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("float")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("text-align")])]),t._v(" "),e("tr",[e("td",[t._v("overflow")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("font-weight")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("left")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("vertical-align")])])])]),t._v(" "),e("p",[e("strong",[t._v("3. 如何最小化重绘(repaint)和回流(reflow)")])]),t._v(" "),e("ul",[e("li",[t._v('需要要对元素进行复杂的操作时，可以先隐藏(display:"none")，操作完成后再显示')]),t._v(" "),e("li",[t._v("需要创建多个 DOM 节点时，使用 DocumentFragment 创建完后一次性的加入 document")]),t._v(" "),e("li",[t._v("缓存 Layout 属性值，如：var left = elem.offsetLeft; 这样，多次使用 left 只产生一次回流")]),t._v(" "),e("li",[t._v("尽量避免用 table 布局（table 元素一旦触发回流就会导致 table 里所有的其它元素回流）")]),t._v(" "),e("li",[t._v("避免使用 css 表达式(expression)，因为每次调用都会重新计算值（包括加载页面）")]),t._v(" "),e("li",[t._v("尽量使用 css 属性简写，如：用 border 代替 border-width, border-style, border-color")]),t._v(" "),e("li",[t._v("批量修改元素样式：elem.className 和 elem.style.cssText 代替 elem.style.xxx")])])])}),[],!1,null,null,null);e.default=a.exports}}]);